<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.13</version>
	</parent>

	<groupId>com.ehsaniara.scs_kafka_intro</groupId>
	<artifactId>scs-101-order</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>scs-101-order</name>
	<packaging>jar</packaging>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>2020.0.5</spring-cloud.version>
		<spring-boot.version>${project.parent.version}</spring-boot.version>
		<elastic-apm.version>1.30.1</elastic-apm.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.ehsaniara.scs_kafka_intro</groupId>
			<artifactId>scs-101-commons</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka-streams</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
			<scope>test</scope>
			<classifier>test-binder</classifier>
			<type>test-jar</type>
		</dependency>

		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>co.elastic.apm</groupId>
			<artifactId>apm-agent-attach</artifactId>
			<version>${elastic-apm.version}</version>
		</dependency>
		<dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId> 
            <version>4.1.1</version>
    		<scope>test</scope>
        </dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<configuration>
					<layers>
						<enabled>true</enabled>
					</layers>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- EmbeddedKafka's service port is 9092. If unit test is parallel ,the conflict would happen.so we need that unit test is sequential processing   -->
            <plugin>
	            <artifactId>maven-surefire-plugin</artifactId>
	            <version>2.22.2</version>
	            <configuration>
	                <trimStackTrace>false</trimStackTrace>
	                <useFile>false</useFile>
	                <reuseForks>false</reuseForks>
	                <forkCount>1</forkCount>
            	</configuration>
	        </plugin>
	        <plugin>
	            <artifactId>maven-failsafe-plugin</artifactId>
	            <version>2.22.2</version>
	            <configuration>
	                <trimStackTrace>false</trimStackTrace>
	                <useFile>false</useFile>
	                <reuseForks>false</reuseForks>
	                <forkCount>1</forkCount>
            	</configuration>
	        </plugin>
		</plugins>
	</build>
</project>
